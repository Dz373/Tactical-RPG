[gd_scene load_steps=29 format=4 uid="uid://3qxj2k7wn5y5"]

[ext_resource type="Texture2D" uid="uid://w0mo2yhg4lir" path="res://Sprites/MiniWorldSprites/Ground/Grass.png" id="1_ee0sx"]
[ext_resource type="Texture2D" uid="uid://crkj4wn1dnioa" path="res://Sprites/MiniWorldSprites/Ground/Shore.png" id="2_ygr4y"]
[ext_resource type="Script" path="res://Scripts/map.gd" id="3_2lh5d"]
[ext_resource type="Script" path="res://Scripts/cursor.gd" id="3_806oi"]
[ext_resource type="Texture2D" uid="uid://d3g84n15yxba0" path="res://Sprites/MiniWorldSprites/User Interface/BoxSelector.png" id="3_e2fqu"]
[ext_resource type="Texture2D" uid="uid://c3ty7tt71qo75" path="res://Sprites/MiniWorldSprites/Ground/TexturedGrass.png" id="4_8lykr"]
[ext_resource type="Texture2D" uid="uid://k6jaepm150om" path="res://Sprites/MiniWorldSprites/Miscellaneous/Boat.png" id="5_0be7v"]
[ext_resource type="Texture2D" uid="uid://bu4ed5o001h3l" path="res://Sprites/MiniWorldSprites/Characters/Soldiers/Melee/SwordsmanTemplate.png" id="8_qqtke"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_f0gqf"]
texture = ExtResource("2_ygr4y")
0:0/0 = 0
1:0/0 = 0
2:0/0 = 0
3:0/0 = 0
4:0/0 = 0

[sub_resource type="TileSet" id="TileSet_jd5nb"]
sources/0 = SubResource("TileSetAtlasSource_f0gqf")

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_26n5g"]
texture = ExtResource("1_ee0sx")
0:0/0 = 0
1:0/0 = 0
2:0/0 = 0
3:0/0 = 0
4:0/0 = 0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_mhxsx"]
texture = ExtResource("4_8lykr")
0:0/0 = 0
1:0/0 = 0
2:0/0 = 0
0:1/0 = 0
1:1/0 = 0
2:1/0 = 0

[sub_resource type="TileSet" id="TileSet_mkcy8"]
sources/0 = SubResource("TileSetAtlasSource_26n5g")
sources/1 = SubResource("TileSetAtlasSource_mhxsx")

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_7yirp"]
texture = ExtResource("5_0be7v")
0:0/0 = 0
1:0/0 = 0

[sub_resource type="TileSet" id="TileSet_xf5v6"]
sources/0 = SubResource("TileSetAtlasSource_7yirp")

[sub_resource type="GDScript" id="GDScript_dooif"]
resource_name = "GameBoard"
script/source = "extends Node2D
class_name GameBoard
const DIRECTIONS = [Vector2.LEFT, Vector2.RIGHT, Vector2.UP, Vector2.DOWN]

## Resource of type Grid.
@export var grid: Resource

## Mapping of coordinates of a cell to a reference to the unit it contains.
var _units := {}
var _active_unit: Unit
var _walkable_cells := []

@onready var _unit_overlay: UnitOverlay = $UnitOverlay
@onready var _unit_path: UnitPath = $UnitPath


func _ready() -> void:
	_reinitialize()


func _unhandled_input(event: InputEvent) -> void:
	if _active_unit and event.is_action_pressed(\"ui_cancel\"):
		_deselect_active_unit()
		_clear_active_unit()


func _get_configuration_warning() -> String:
	var warning := \"\"
	if not grid:
		warning = \"You need a Grid resource for this node to work.\"
	return warning


## Returns `true` if the cell is occupied by a unit.
func is_occupied(cell: Vector2) -> bool:
	return _units.has(cell)


## Returns an array of cells a given unit can walk using the flood fill algorithm.
func get_walkable_cells(unit: Unit) -> Array:
	return _flood_fill(unit.cell, unit.move_range)


## Clears, and refills the `_units` dictionary with game objects that are on the board.
func _reinitialize() -> void:
	_units.clear()

	for child in get_children():
		var unit := child as Unit
		if not unit:
			continue
		_units[unit.cell] = unit


## Returns an array with all the coordinates of walkable cells based on the `max_distance`.
func _flood_fill(cell: Vector2, max_distance: int) -> Array:
	var array := []
	var stack := [cell]
	while not stack.size() == 0:
		var current = stack.pop_back()
		if not grid.is_within_bounds(current):
			continue
		if current in array:
			continue

		var difference: Vector2 = (current - cell).abs()
		var distance := int(difference.x + difference.y)
		if distance > max_distance:
			continue

		array.append(current)
		for direction in DIRECTIONS:
			var coordinates: Vector2 = current + direction
			if is_occupied(coordinates):
				continue
			if coordinates in array:
				continue
			# Minor optimization: If this neighbor is already queued
			#	to be checked, we don't need to queue it again
			if coordinates in stack:
				continue

			stack.append(coordinates)
	return array


## Updates the _units dictionary with the target position for the unit and asks the _active_unit to walk to it.
func _move_active_unit(new_cell: Vector2) -> void:
	if is_occupied(new_cell) or not new_cell in _walkable_cells:
		return
	# warning-ignore:return_value_discarded
	_units.erase(_active_unit.cell)
	_units[new_cell] = _active_unit
	_deselect_active_unit()
	_active_unit.walk_along(_unit_path.current_path)
	await _active_unit.walk_finished
	_clear_active_unit()


## Selects the unit in the `cell` if there's one there.
## Sets it as the `_active_unit` and draws its walkable cells and interactive move path. 
func _select_unit(cell: Vector2) -> void:
	if not _units.has(cell):
		return

	_active_unit = _units[cell]
	_active_unit.is_selected = true
	_walkable_cells = get_walkable_cells(_active_unit)
	_unit_overlay.draw(_walkable_cells)
	_unit_path.initialize(_walkable_cells)


## Deselects the active unit, clearing the cells overlay and interactive path drawing.
func _deselect_active_unit() -> void:
	_active_unit.is_selected = false
	_unit_overlay.clear()
	_unit_path.stop()


## Clears the reference to the _active_unit and the corresponding walkable cells.
func _clear_active_unit() -> void:
	_active_unit = null
	_walkable_cells.clear()


## Selects or moves a unit based on where the cursor is.
func _on_Cursor_accept_pressed(cell: Vector2) -> void:
	if not _active_unit:
		_select_unit(cell)
	elif _active_unit.is_selected:
		_move_active_unit(cell)


## Updates the interactive path's drawing if there's an active and selected unit.
func _on_Cursor_moved(new_cell: Vector2) -> void:
	if _active_unit and _active_unit.is_selected:
		_unit_path.draw(_active_unit.cell, new_cell)
"

[sub_resource type="GDScript" id="GDScript_elbqo"]
resource_name = "UnitPath"
script/source = "extends TileMapLayer
class_name UnitPath
@export var grid: Resource

var _pathfinder: PathFinder
var current_path := PackedVector2Array()


## Creates a new PathFinder that uses the AStar algorithm to find a path between two cells among
## the `walkable_cells`.
func initialize(walkable_cells: Array) -> void:
	_pathfinder = PathFinder.new(grid, walkable_cells)


## Finds and draws the path between `cell_start` and `cell_end`
func draw(cell_start: Vector2, cell_end: Vector2) -> void:
	clear()
	current_path = _pathfinder.calculate_point_path(cell_start, cell_end)
	set_cells_terrain_connect(0, current_path, 0, 0)


## Stops drawing, clearing the drawn path and the `_pathfinder`.
func stop() -> void:
	_pathfinder = null
	clear()
"

[sub_resource type="GDScript" id="GDScript_hg2dy"]
resource_name = "UnitOverlay"
script/source = "extends TileMapLayer
class_name UnitOverlay

## Fills the tilemap with the cells, giving a visual representation of the cells a unit can walk.
func draw(cells: Array) -> void:
	clear()
	for cell in cells:
		set_cell(0, cell, 0, Vector2i(0,0))
"

[sub_resource type="AtlasTexture" id="AtlasTexture_o88dg"]
atlas = ExtResource("8_qqtke")
region = Rect2(0, 0, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_5i6og"]
atlas = ExtResource("8_qqtke")
region = Rect2(16, 0, 16, 16)

[sub_resource type="SpriteFrames" id="SpriteFrames_mkqjj"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_o88dg")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_5i6og")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_lxr0a"]
size = Vector2(14, 14)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_1l0ul"]
size = Vector2(14, 14)

[sub_resource type="AtlasTexture" id="AtlasTexture_pmf1h"]
atlas = ExtResource("3_e2fqu")
region = Rect2(0, 0, 16, 16)

[sub_resource type="AtlasTexture" id="AtlasTexture_tr7j7"]
atlas = ExtResource("3_e2fqu")
region = Rect2(16, 0, 16, 16)

[sub_resource type="SpriteFrames" id="SpriteFrames_8v8kf"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_pmf1h")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tr7j7")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_tbx6a"]
size = Vector2(14, 14)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_uvk0c"]
size = Vector2(14, 14)

[node name="Main" type="Node2D"]

[node name="Map" type="Node2D" parent="."]
script = ExtResource("3_2lh5d")
size = 20

[node name="Ocean" type="TileMapLayer" parent="Map"]
tile_map_data = PackedByteArray("AAAAAAAAAAAEAAAAAAAAAAEAAAAEAAAAAAAAAAIAAAAEAAAAAAAAAAMAAAAEAAAAAAAAAAQAAAAEAAAAAAAAAAUAAAAEAAAAAAAAAAYAAAAEAAAAAAAAAAcAAAAEAAAAAAAAAAgAAAAEAAAAAAAAAAkAAAAEAAAAAAAAAAoAAAAEAAAAAAAAAAsAAAAEAAAAAAAAAAwAAAAEAAAAAAAAAA0AAAAEAAAAAAAAAA4AAAAEAAAAAAAAAA8AAAAEAAAAAAAAABAAAAAEAAAAAAAAABEAAAAEAAAAAAAAABIAAAAEAAAAAAAAABMAAAAEAAAAAAABAAAAAAAEAAAAAAABAAEAAAAEAAAAAAABAAIAAAAEAAAAAAABAAMAAAAEAAAAAAABAAQAAAAEAAAAAAABAAUAAAAEAAAAAAABAAYAAAAEAAAAAAABAAcAAAAEAAAAAAABAAgAAAAEAAAAAAABAAkAAAAEAAAAAAABAAoAAAAEAAAAAAABAAsAAAAEAAAAAAABAAwAAAAEAAAAAAABAA0AAAAEAAAAAAABAA4AAAAEAAAAAAABAA8AAAAEAAAAAAABABAAAAAEAAAAAAABABEAAAAEAAAAAAABABIAAAAEAAAAAAABABMAAAAEAAAAAAACAAAAAAAEAAAAAAACAAEAAAAEAAAAAAACAAIAAAAEAAAAAAACAAMAAAAEAAAAAAACAAQAAAAEAAAAAAACAAUAAAAEAAAAAAACAAYAAAAEAAAAAAACAAcAAAAEAAAAAAACAAgAAAAEAAAAAAACAAkAAAAEAAAAAAACAAoAAAAEAAAAAAACAAsAAAAEAAAAAAACAAwAAAAEAAAAAAACAA0AAAAEAAAAAAACAA4AAAAEAAAAAAACAA8AAAAEAAAAAAACABAAAAAEAAAAAAACABEAAAAEAAAAAAACABIAAAAEAAAAAAACABMAAAAEAAAAAAADAAAAAAAEAAAAAAADAAEAAAAEAAAAAAADAAIAAAAEAAAAAAADAAMAAAAEAAAAAAADAAQAAAAEAAAAAAADAAUAAAAEAAAAAAADAAYAAAAEAAAAAAADAAcAAAADAAAAAAADAAgAAAADAAAAAAADAAkAAAADAAAAAAADAAoAAAAEAAAAAAADAAsAAAAEAAAAAAADAAwAAAAEAAAAAAADAA0AAAAEAAAAAAADAA4AAAADAAAAAAADAA8AAAADAAAAAAADABAAAAADAAAAAAADABEAAAADAAAAAAADABIAAAAEAAAAAAADABMAAAAEAAAAAAAEAAAAAAAEAAAAAAAEAAEAAAAEAAAAAAAEAAIAAAAEAAAAAAAEAAMAAAAEAAAAAAAEAAQAAAAEAAAAAAAEAAUAAAADAAAAAAAEAAYAAAADAAAAAAAEAAcAAAADAAAAAAAEAAgAAAADAAAAAAAEAAkAAAADAAAAAAAEAAoAAAADAAAAAAAEAAsAAAADAAAAAAAEAAwAAAADAAAAAAAEAA0AAAADAAAAAAAEAA4AAAADAAAAAAAEAA8AAAACAAAAAAAEABAAAAADAAAAAAAEABEAAAADAAAAAAAEABIAAAADAAAAAAAEABMAAAADAAAAAAAFAAAAAAAEAAAAAAAFAAEAAAAEAAAAAAAFAAIAAAAEAAAAAAAFAAMAAAAEAAAAAAAFAAQAAAADAAAAAAAFAAUAAAADAAAAAAAFAAYAAAADAAAAAAAFAAcAAAADAAAAAAAFAAgAAAACAAAAAAAFAAkAAAADAAAAAAAFAAoAAAADAAAAAAAFAAsAAAADAAAAAAAFAAwAAAACAAAAAAAFAA0AAAACAAAAAAAFAA4AAAACAAAAAAAFAA8AAAACAAAAAAAFABAAAAACAAAAAAAFABEAAAACAAAAAAAFABIAAAACAAAAAAAFABMAAAADAAAAAAAGAAAAAAAEAAAAAAAGAAEAAAAEAAAAAAAGAAIAAAAEAAAAAAAGAAMAAAAEAAAAAAAGAAQAAAADAAAAAAAGAAUAAAADAAAAAAAGAAYAAAADAAAAAAAGAAcAAAACAAAAAAAGAAgAAAACAAAAAAAGAAkAAAACAAAAAAAGAAoAAAACAAAAAAAGAAsAAAACAAAAAAAGAAwAAAACAAAAAAAGAA0AAAACAAAAAAAGAA4AAAACAAAAAAAGAA8AAAABAAAAAAAGABAAAAABAAAAAAAGABEAAAABAAAAAAAGABIAAAACAAAAAAAGABMAAAACAAAAAAAHAAAAAAAEAAAAAAAHAAEAAAAEAAAAAAAHAAIAAAAEAAAAAAAHAAMAAAADAAAAAAAHAAQAAAADAAAAAAAHAAUAAAADAAAAAAAHAAYAAAACAAAAAAAHAAcAAAACAAAAAAAHAAgAAAABAAAAAAAHAAkAAAABAAAAAAAHAAoAAAACAAAAAAAHAAsAAAACAAAAAAAHAAwAAAABAAAAAAAHAA0AAAABAAAAAAAHAA4AAAABAAAAAAAHAA8AAAABAAAAAAAHABAAAAABAAAAAAAHABEAAAABAAAAAAAHABIAAAABAAAAAAAHABMAAAABAAAAAAAIAAAAAAAEAAAAAAAIAAEAAAAEAAAAAAAIAAIAAAAEAAAAAAAIAAMAAAADAAAAAAAIAAQAAAADAAAAAAAIAAUAAAACAAAAAAAIAAYAAAACAAAAAAAIAAcAAAABAAAAAAAIAAgAAAABAAAAAAAIAAkAAAABAAAAAAAIAAoAAAABAAAAAAAIAAsAAAABAAAAAAAIAAwAAAABAAAAAAAIAA0AAAAAAAAAAAAIAA4AAAAAAAAAAAAIAA8AAAAAAAAAAAAIABAAAAAAAAAAAAAIABEAAAAAAAAAAAAIABIAAAABAAAAAAAIABMAAAABAAAAAAAJAAAAAAAEAAAAAAAJAAEAAAAEAAAAAAAJAAIAAAAEAAAAAAAJAAMAAAADAAAAAAAJAAQAAAADAAAAAAAJAAUAAAACAAAAAAAJAAYAAAACAAAAAAAJAAcAAAABAAAAAAAJAAgAAAABAAAAAAAJAAkAAAAAAAAAAAAJAAoAAAAAAAAAAAAJAAsAAAAAAAAAAAAJAAwAAAAAAAAAAAAJAA0AAAAAAAAAAAAJAA4AAAACAAAAAAAJAA8AAAACAAAAAAAJABAAAAAAAAAAAAAJABEAAAAAAAAAAAAJABIAAAAAAAAAAAAJABMAAAAAAAAAAAAKAAAAAAAEAAAAAAAKAAEAAAAEAAAAAAAKAAIAAAAEAAAAAAAKAAMAAAADAAAAAAAKAAQAAAACAAAAAAAKAAUAAAACAAAAAAAKAAYAAAABAAAAAAAKAAcAAAABAAAAAAAKAAgAAAAAAAAAAAAKAAkAAAAAAAAAAAAKAAoAAAACAAAAAAAKAAsAAAACAAAAAAAKAAwAAAACAAAAAAAKAA0AAAACAAAAAAAKAA4AAAACAAAAAAAKAA8AAAACAAAAAAAKABAAAAACAAAAAAAKABEAAAACAAAAAAAKABIAAAACAAAAAAAKABMAAAACAAAAAAALAAAAAAAEAAAAAAALAAEAAAAEAAAAAAALAAIAAAADAAAAAAALAAMAAAADAAAAAAALAAQAAAACAAAAAAALAAUAAAACAAAAAAALAAYAAAABAAAAAAALAAcAAAAAAAAAAAALAAgAAAAAAAAAAAALAAkAAAACAAAAAAALAAoAAAACAAAAAAALAAsAAAACAAAAAAALAAwAAAACAAAAAAALAA0AAAACAAAAAAALAA4AAAACAAAAAAALAA8AAAACAAAAAAALABAAAAACAAAAAAALABEAAAACAAAAAAALABIAAAACAAAAAAALABMAAAACAAAAAAAMAAAAAAAEAAAAAAAMAAEAAAAEAAAAAAAMAAIAAAADAAAAAAAMAAMAAAADAAAAAAAMAAQAAAACAAAAAAAMAAUAAAABAAAAAAAMAAYAAAABAAAAAAAMAAcAAAAAAAAAAAAMAAgAAAAAAAAAAAAMAAkAAAACAAAAAAAMAAoAAAACAAAAAAAMAAsAAAACAAAAAAAMAAwAAAACAAAAAAAMAA0AAAACAAAAAAAMAA4AAAACAAAAAAAMAA8AAAACAAAAAAAMABAAAAACAAAAAAAMABEAAAACAAAAAAAMABIAAAACAAAAAAAMABMAAAACAAAAAAANAAAAAAAEAAAAAAANAAEAAAAEAAAAAAANAAIAAAADAAAAAAANAAMAAAADAAAAAAANAAQAAAACAAAAAAANAAUAAAABAAAAAAANAAYAAAAAAAAAAAANAAcAAAAAAAAAAAANAAgAAAAAAAAAAAANAAkAAAACAAAAAAANAAoAAAACAAAAAAANAAsAAAACAAAAAAANAAwAAAACAAAAAAANAA0AAAACAAAAAAANAA4AAAACAAAAAAANAA8AAAACAAAAAAANABAAAAACAAAAAAANABEAAAACAAAAAAANABIAAAACAAAAAAANABMAAAACAAAAAAAOAAAAAAAEAAAAAAAOAAEAAAAEAAAAAAAOAAIAAAADAAAAAAAOAAMAAAADAAAAAAAOAAQAAAACAAAAAAAOAAUAAAABAAAAAAAOAAYAAAABAAAAAAAOAAcAAAAAAAAAAAAOAAgAAAAAAAAAAAAOAAkAAAACAAAAAAAOAAoAAAACAAAAAAAOAAsAAAACAAAAAAAOAAwAAAACAAAAAAAOAA0AAAACAAAAAAAOAA4AAAACAAAAAAAOAA8AAAACAAAAAAAOABAAAAACAAAAAAAOABEAAAACAAAAAAAOABIAAAACAAAAAAAOABMAAAACAAAAAAAPAAAAAAAEAAAAAAAPAAEAAAAEAAAAAAAPAAIAAAADAAAAAAAPAAMAAAADAAAAAAAPAAQAAAACAAAAAAAPAAUAAAACAAAAAAAPAAYAAAABAAAAAAAPAAcAAAAAAAAAAAAPAAgAAAAAAAAAAAAPAAkAAAACAAAAAAAPAAoAAAACAAAAAAAPAAsAAAACAAAAAAAPAAwAAAACAAAAAAAPAA0AAAACAAAAAAAPAA4AAAACAAAAAAAPAA8AAAACAAAAAAAPABAAAAACAAAAAAAPABEAAAACAAAAAAAPABIAAAACAAAAAAAPABMAAAACAAAAAAAQAAAAAAAEAAAAAAAQAAEAAAAEAAAAAAAQAAIAAAAEAAAAAAAQAAMAAAADAAAAAAAQAAQAAAACAAAAAAAQAAUAAAACAAAAAAAQAAYAAAABAAAAAAAQAAcAAAAAAAAAAAAQAAgAAAAAAAAAAAAQAAkAAAACAAAAAAAQAAoAAAACAAAAAAAQAAsAAAACAAAAAAAQAAwAAAACAAAAAAAQAA0AAAACAAAAAAAQAA4AAAACAAAAAAAQAA8AAAACAAAAAAAQABAAAAACAAAAAAAQABEAAAACAAAAAAAQABIAAAACAAAAAAAQABMAAAACAAAAAAARAAAAAAAEAAAAAAARAAEAAAAEAAAAAAARAAIAAAAEAAAAAAARAAMAAAADAAAAAAARAAQAAAADAAAAAAARAAUAAAACAAAAAAARAAYAAAABAAAAAAARAAcAAAAAAAAAAAARAAgAAAAAAAAAAAARAAkAAAACAAAAAAARAAoAAAACAAAAAAARAAsAAAACAAAAAAARAAwAAAACAAAAAAARAA0AAAACAAAAAAARAA4AAAACAAAAAAARAA8AAAACAAAAAAARABAAAAACAAAAAAARABEAAAACAAAAAAARABIAAAACAAAAAAARABMAAAACAAAAAAASAAAAAAAEAAAAAAASAAEAAAAEAAAAAAASAAIAAAAEAAAAAAASAAMAAAADAAAAAAASAAQAAAADAAAAAAASAAUAAAACAAAAAAASAAYAAAABAAAAAAASAAcAAAAAAAAAAAASAAgAAAAAAAAAAAASAAkAAAACAAAAAAASAAoAAAACAAAAAAASAAsAAAACAAAAAAASAAwAAAACAAAAAAASAA0AAAACAAAAAAASAA4AAAACAAAAAAASAA8AAAACAAAAAAASABAAAAACAAAAAAASABEAAAACAAAAAAASABIAAAACAAAAAAASABMAAAACAAAAAAATAAAAAAAEAAAAAAATAAEAAAAEAAAAAAATAAIAAAAEAAAAAAATAAMAAAADAAAAAAATAAQAAAADAAAAAAATAAUAAAACAAAAAAATAAYAAAABAAAAAAATAAcAAAABAAAAAAATAAgAAAAAAAAAAAATAAkAAAACAAAAAAATAAoAAAACAAAAAAATAAsAAAACAAAAAAATAAwAAAACAAAAAAATAA0AAAACAAAAAAATAA4AAAACAAAAAAATAA8AAAACAAAAAAATABAAAAACAAAAAAATABEAAAACAAAAAAATABIAAAACAAAAAAATABMAAAACAAAAAAA=")
tile_set = SubResource("TileSet_jd5nb")

[node name="Land" type="TileMapLayer" parent="Map"]
tile_map_data = PackedByteArray("AAAKABMAAAACAAAAAAALABMAAAACAAAAAAAMABMAAAACAAAAAAANABMAAAACAAAAAAAOABMAAQABAAEAAAAPABMAAAACAAAAAAAQABMAAAACAAAAAAARABMAAQABAAEAAAASABMAAAACAAAAAAATABMAAAACAAAAAAATABIAAAACAAAAAAASABIAAAACAAAAAAARABIAAAACAAAAAAAQABIAAAACAAAAAAAPABIAAAACAAAAAAAOABIAAAACAAAAAAANABIAAAACAAAAAAAMABIAAAACAAAAAAALABIAAQABAAEAAAAKABIAAAACAAAAAAAKABEAAAACAAAAAAALABEAAAACAAAAAAALABAAAAACAAAAAAAMABAAAQABAAEAAAANABAAAAACAAAAAAAOABAAAQABAAEAAAAPABAAAAACAAAAAAAQABAAAAACAAAAAAAQABEAAAACAAAAAAARABEAAAACAAAAAAASABEAAAACAAAAAAATABEAAAACAAAAAAASABAAAAACAAAAAAARABAAAAACAAAAAAAMABEAAQABAAEAAAAKABAAAAACAAAAAAAKAA8AAAACAAAAAAAJAA8AAAACAAAAAAAJAA4AAAACAAAAAAAKAA4AAAACAAAAAAAOABEAAAACAAAAAAAPABEAAAACAAAAAAANABEAAAACAAAAAAATABAAAQABAAEAAAATAA8AAAACAAAAAAATAA4AAAACAAAAAAATAA0AAAACAAAAAAATAAwAAAACAAAAAAATAAsAAAACAAAAAAATAAoAAAACAAAAAAATAAkAAAACAAAAAAASAAkAAAACAAAAAAARAAkAAAACAAAAAAAQAAkAAAACAAAAAAAPAAkAAAACAAAAAAAOAAkAAAACAAAAAAANAAkAAAACAAAAAAAMAAkAAAACAAAAAAALAAkAAAACAAAAAAALAAoAAAACAAAAAAAKAAoAAAACAAAAAAAKAAsAAAACAAAAAAAKAAwAAAACAAAAAAAKAA0AAAACAAAAAAAOAA4AAAACAAAAAAAOAA0AAQABAAEAAAAOAAwAAAACAAAAAAAOAAsAAQABAAEAAAAOAAoAAAACAAAAAAANAAoAAAACAAAAAAAMAAoAAAACAAAAAAAMAAsAAQABAAEAAAALAAsAAAACAAAAAAALAAwAAAACAAAAAAALAA0AAAACAAAAAAALAA4AAQABAAEAAAALAA8AAAACAAAAAAAMAA8AAAACAAAAAAAMAA4AAAACAAAAAAAMAA0AAAACAAAAAAAMAAwAAAACAAAAAAANAAwAAAACAAAAAAANAAsAAAACAAAAAAANAA0AAAACAAAAAAANAA4AAAACAAAAAAANAA8AAAACAAAAAAAOAA8AAAACAAAAAAAPAA8AAAACAAAAAAAPAA4AAAACAAAAAAAPAA0AAAACAAAAAAAPAAwAAAACAAAAAAAPAAsAAAACAAAAAAAPAAoAAAACAAAAAAAQAAoAAAACAAAAAAAQAAsAAAACAAAAAAAQAAwAAAACAAAAAAAQAA0AAAACAAAAAAAQAA4AAAACAAAAAAAQAA8AAAACAAAAAAARAA8AAQABAAEAAAARAA4AAAACAAAAAAARAA0AAAACAAAAAAARAAwAAAACAAAAAAARAAsAAQABAAEAAAARAAoAAAACAAAAAAASAAoAAAACAAAAAAASAAsAAAACAAAAAAASAAwAAAACAAAAAAASAA0AAQABAAEAAAASAA4AAAACAAAAAAASAA8AAAACAAAAAAAMAAgAAAACAAAAAAANAAgAAAACAAAAAAAOAAgAAAACAAAAAAAPAAgAAAACAAAAAAAQAAgAAAACAAAAAAARAAgAAAACAAAAAAA=")
tile_set = SubResource("TileSet_mkcy8")

[node name="Object" type="TileMapLayer" parent="Map"]
tile_set = SubResource("TileSet_xf5v6")

[node name="GameBoard" type="Node2D" parent="."]
script = SubResource("GDScript_dooif")

[node name="UnitPath" type="TileMapLayer" parent="GameBoard"]
script = SubResource("GDScript_elbqo")

[node name="UnitOverlay" type="TileMapLayer" parent="GameBoard"]
script = SubResource("GDScript_hg2dy")

[node name="Unit" type="StaticBody2D" parent="GameBoard"]
position = Vector2(200, 136)

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="GameBoard/Unit"]
sprite_frames = SubResource("SpriteFrames_mkqjj")
autoplay = "default"
frame = 1
frame_progress = 0.22553

[node name="CollisionShape2D" type="CollisionShape2D" parent="GameBoard/Unit"]
shape = SubResource("RectangleShape2D_lxr0a")

[node name="Area2D" type="Area2D" parent="GameBoard/Unit"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="GameBoard/Unit/Area2D"]
shape = SubResource("RectangleShape2D_1l0ul")

[node name="Cursor" type="StaticBody2D" parent="GameBoard"]
position = Vector2(8, 8)
script = ExtResource("3_806oi")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="GameBoard/Cursor"]
sprite_frames = SubResource("SpriteFrames_8v8kf")
autoplay = "default"
frame_progress = 0.561259

[node name="CollisionShape2D" type="CollisionShape2D" parent="GameBoard/Cursor"]
shape = SubResource("RectangleShape2D_tbx6a")

[node name="Area2D" type="Area2D" parent="GameBoard/Cursor"]

[node name="CollisionShape2D" type="CollisionShape2D" parent="GameBoard/Cursor/Area2D"]
shape = SubResource("RectangleShape2D_uvk0c")

[connection signal="body_entered" from="GameBoard/Cursor/Area2D" to="GameBoard/Cursor" method="_on_area_2d_body_entered"]
